# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.1.2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

#      - name: Make environment variables global 
#        id: init
#        run: |
#          echo "stageEnv=${{ env.ENVIRONMENT }}" >> $GITHUB_OUTPUT
      - name: ðŸ¤” Evaluate branch name
        id: branch-name
        run: |
          if ${{ contains(github.ref, 'develop') }}; then
            PROPERTIES_VALUE="dev"
            echo "ENVIRONMENT=DEV" >> $GITHUB_OUTPUT
          elif ${{ contains(github.ref, 'feat') }}; then
            PROPERTIES_VALUE="dev"
            echo "ENVIRONMENT=DEV" >> $GITHUB_OUTPUT
          elif ${{ contains(github.ref, 'release') }}; then
            PROPERTIES_VALUE="qua"
            echo "ENVIRONMENT=QUA" >> $GITHUB_OUTPUT
          elif ${{ contains(github.ref, 'main') }}; then
            PROPERTIES_VALUE="pro"
            echo "ENVIRONMENT='PRO'" >> $GITHUB_OUTPUT
          fi
          
    outputs:
      ENVIRONMENT: ${{ steps.init.outputs.ENVIRONMENT }}
      
  deployment:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ needs.build.outputs.ENVIRONMENT }}
    needs: build
      
    steps:         
      - name: Information
        run: | 
          echo ${{ secrets.TEST_SEC }}
          echo ${{ vars.TEST_VAR }}
          echo ${{ needs.build.outputs.ENVIRONMENT }}
